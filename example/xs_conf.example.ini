;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; This is the configuration file required by XookSuut.
; 
; Some variables are deactivated by default..
; To activate a variable remove the starting semicolon and proceed to change its value.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Some general configurations prior the fitting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[general]

; If you analyse multiple objects from the same dataset (i.e., CALIFA, MaNGA, MUSE,
; SAMI, etc)  you can specify it here.   
;dataset = -

; where the models will be stored
;output_directory = ./

; This is just a proxy of the error (in km/s) in the emission line centroid. Its value does not affect the fitting, only
; the final chisquare value.
;e_centroid = 5

; If you want to remove isolated pixels.
smooth = True

; v_center (in km/s) defines the velocity of the circular component v_t at the kinematic centre (i.e.,  v0 at r0 = 0).
; it can take a float value, although it is usually asummed that the kinematic centre does not rotate (i.e v_center = 0).
; v_center can also be estimated by extrapolatig the first two velocities (r1,v1) and (r2,v2) to (r0=0,v0). In such a case
; set ´v_center = extrapolate´ . v_center is never estimated in a LeastSquare sence, it adopts the value passed by the user.
; 	Note: If v_center is set to a float number different than zero, this will only apply for the circular model. 
; 	Note: If v_center is not zero (i.e., ´v_center = extrapolate´, or a float  number ), this apply for all models. 
v_center = 0



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MCMCM analysis configuration.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[mcmc]
; The mcmc analysis makes use of the ensamble methods emcee (Foreman-Mackey+2013) and zeus (Karamanis+2021,2022).
; emcee is suitable for low dimension models ; while zeus converges faster in high dimensions.
; acceptance fraction between 0.15-0.30 are expected for the large number of variables;
; if zeus is used the acceptance rate = 1 by definition.

; If you want to perform the Markov Chain Monte Carlo analysis then set, ´mcmc_ana = True´ 
mcmc_ana = False

; Choose the MCMC sampler. ´emcee´ from Dan Foreman-Mackey, or ´zeus´ from Minas~Karamanis.
mcmc_sampler = emcee

; Number of steps/iterations.
Nsteps = 10

; Keep values every ´thin´-steps from the chain.
thin = 1

; The number of steps to discard from the chain. If 0.0 < burnin < 1.0, it will be considered as the fraction of the chain to be discarded,
; i.e 0.1 = 10%. 
; The final number of steps in the chain will be then, steps = Nsteps - burnin
burnin = 0.1

; You dont know a priori the number of walkers you need since it depends on the number of variables to estimate from the model.
; XookSuut calculates automatically the number of walkers (i.e., Nwalvers=2Nvars).
; Be aware that the major number of variables , larger the computation time !
;Nwalkers = False

; Proposal distributions: ´G´ stands for Gausian and ´C´ for Cauchy
PropDist = C

;Wheter the intrinsec scatter is estimated.
sigma_int = True

; If you have installed the python multiprocessing module, you can paralelize this task !.
Parallelize = True

; By default XS uses the number of available CPUs - 1. Change this entrance if you want to use another CPUs.
Ncpus = False

; If you want to use the values obtained from the marginal distribution of the parameters;
; otherwise it will use those obtained from the LeastSquare analysis.
use_mcmc_vals = True

; If you want to save the chain in a fits file. The chain dimension is (nsteps, nwalkers, ndim).
save_chain = True
; A plot showing the chain progress, i.e., steps vs. v_k
plot_chain = True



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bootrap analysis configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[bootstrap]
; If you want to estimate errors on parameters via bootstrap then set ´boots_ana = True´
boots_ana = False
; Number of bootstraps
Nboots = 50
; Wheter the mean values from the bootstrap analysis are used as best-fit values, otherwise 
; the LeastSquares results will be used.
use_bootstrap = True
; Wheter this task is performed in parallel.
parallelize = True



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Configuration of constant parameters
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; If you want to constrain and have more control on the fitting parameters, then you can change 
; the inputs as desired. Most of the time this is not required !

[constant_params]

;FIT_PA = True
;PA = 100
;MIN_PA = 0
;MAX_PA = 360

;FIT_INC = True
;INC = 45
;MIN_INC = 5
;MAX_INC = 80

;FIT_X0 = True
;X0 = NX/2
;MIN_X0 = 0
;MAX_X0 = NX

;FIT_Y0 = True
;Y0 = NX/2
;MIN_Y0 = 0
;MAX_Y0 = NY

;FIT_PHI_BAR = True
;PHI_BAR = 45
;MIN_PHI_B = 0
;MAX_PHI_B = 180

;FIT_VSYS = True
;VSYS = 0
;MIN_VSYS = 0
;MAX_VSYS = 300000



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Convolve models
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; If you want to convolve the kinematic models at each iteration during the MCMC analysis then set ´convolve_mdls = True´.
;	NOTE: This action can considerably encrease the overall fitting process !!
;		  It should be avoided its use in large images.
; If PSF[''] ~ pixel_size[''] then avoid convolving the models.

[convolve]

convolve_mdls = False
; A symmetrical gaussian kernel is assumed. FWHM must be in arcseconds.	
psf_fwhm = 2.5

